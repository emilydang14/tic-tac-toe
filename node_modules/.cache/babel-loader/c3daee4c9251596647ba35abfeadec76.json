{"ast":null,"code":"var _jsxFileName = \"/Users/emilydang/Desktop/tic-tac-toe/src/GameBoard/GameBoard.jsx\";\nimport React, { useState } from \"react\";\nimport Square from \"./squares/Square\";\nimport classes from \"./GameBoard.module.css\";\n\nconst GameBoard = ({\n  squares,\n  clickOnBoard\n}) => {\n  const [boardValue, setBoardValue] = useState([Array(9).fill(null)]);\n  const [xIsNext, setXisNext] = useState(true);\n\n  const clickSquareHandler = () => {\n    setXOrO(!xOrO);\n    const newSquareValues = [...squareValues];\n    xOrO ? newSquareValues.push(\"X\") : newSquareValues.push(\"O\");\n    setSquareValues(newSquareValues);\n    console.log(squareValues);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    squareValue: squareValue,\n    clickSquare: clickSquareHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GameBoard;","map":{"version":3,"sources":["/Users/emilydang/Desktop/tic-tac-toe/src/GameBoard/GameBoard.jsx"],"names":["React","useState","Square","classes","GameBoard","squares","clickOnBoard","boardValue","setBoardValue","Array","fill","xIsNext","setXisNext","clickSquareHandler","setXOrO","xOrO","newSquareValues","squareValues","push","setSquareValues","console","log","squareValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AAC/C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAACQ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,OAAO,CAAC,CAACC,IAAF,CAAP;AACA,UAAMC,eAAe,GAAG,CAAC,GAAGC,YAAJ,CAAxB;AACAF,IAAAA,IAAI,GAAGC,eAAe,CAACE,IAAhB,CAAqB,GAArB,CAAH,GAA+BF,eAAe,CAACE,IAAhB,CAAqB,GAArB,CAAnC;AACAC,IAAAA,eAAe,CAACH,eAAD,CAAf;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEkB,WAArB;AAAkC,IAAA,WAAW,EAAET,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAhBD;;AAkBA,eAAeT,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Square from \"./squares/Square\";\nimport classes from \"./GameBoard.module.css\";\n\nconst GameBoard = ({ squares, clickOnBoard }) => {\n  const [boardValue, setBoardValue] = useState([Array(9).fill(null)]);\n  const [xIsNext, setXisNext] = useState(true);\n  const clickSquareHandler = () => {\n    setXOrO(!xOrO);\n    const newSquareValues = [...squareValues];\n    xOrO ? newSquareValues.push(\"X\") : newSquareValues.push(\"O\");\n    setSquareValues(newSquareValues);\n    console.log(squareValues);\n  };\n\n  return (\n    <div className={classes.GameBoard}>\n      <Square squareValue={squareValue} clickSquare={clickSquareHandler} />\n    </div>\n  );\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}